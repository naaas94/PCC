name: Daily Inference Pipeline

on:
  schedule:
    - cron: '0 12 * * *'  # 12:00 UTC = 9:00 ART
  workflow_dispatch:

jobs:
  run-inference:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-dev.txt

      - name: Set up GCP credentials
        run: echo "${{ secrets.GCP_CREDENTIALS }}" | base64 -d > ${{ github.workspace }}/gcp-key.json

      - name: Show GCP key file (first 20 lines)
        run: cat -n ${{ github.workspace }}/gcp-key.json | head -20

      - name: Show GCP key file as base64
        run: |
          echo "==== GCP KEY FILE BASE64 ===="
          base64 ${{ github.workspace }}/gcp-key.json
          echo "==== END OF FILE ===="

      - name: Check for new models
        id: model_check
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ github.workspace }}/gcp-key.json
        run: |
          echo "üîç Checking for new models in GCS..."
          python src/ingestion/load_model_from_gcs.py --force-latest 2>&1 | tee model_ingestion.log
          if [ $? -eq 0 ]; then
            echo "‚úÖ Model ingestion completed successfully"
            echo "model_updated=true" >> $GITHUB_OUTPUT
          else
            echo "‚ö†Ô∏è Model ingestion failed, continuing with existing model"
            echo "model_updated=false" >> $GITHUB_OUTPUT
          fi

      - name: Run inference pipeline
        id: run_pipeline
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ github.workspace }}/gcp-key.json
        run: |
          set -o pipefail
          echo "üöÄ Starting inference pipeline..."
          python scripts/daily_pipeline_run.py --no-force-latest --sample 2>&1 | tee pipeline_output.log

      - name: Get last 50 lines of log for email
        if: always()
        id: get_log_tail
        run: |
          if [ -f pipeline_output.log ]; then
            tail -n 50 pipeline_output.log > log_tail.txt
            echo "log_tail<<EOF" >> $GITHUB_OUTPUT
            cat log_tail.txt >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
          else
            echo "log_tail=No log file found" >> $GITHUB_OUTPUT
          fi

      - name: Debug email secrets
        if: failure()
        run: |
          echo "Checking if EMAIL_USERNAME is set..."
          if [ -n "${{ secrets.EMAIL_USERNAME }}" ]; then
            echo "‚úÖ EMAIL_USERNAME is set (length: ${#EMAIL_USERNAME})"
          else
            echo "‚ùå EMAIL_USERNAME is not set"
          fi
          
          echo "Checking if EMAIL_PASSWORD is set..."
          if [ -n "${{ secrets.EMAIL_PASSWORD }}" ]; then
            echo "‚úÖ EMAIL_PASSWORD is set (length: ${#EMAIL_PASSWORD})"
          else
            echo "‚ùå EMAIL_PASSWORD is not set"
          fi

      - name: Send failure notification email
        if: failure()
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 587
          secure: true
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: "[ALERT] PCC Daily Inference Pipeline Failed"
          to: alejandroa.garay.ag@gmail.com
          from: ${{ secrets.EMAIL_USERNAME }}
          body: |
            The PCC daily inference pipeline failed.

            Date: ${{ github.event.head_commit.timestamp || github.run_id }}
            Commit: ${{ github.sha }}
            Workflow: ${{ github.workflow }}
            Run: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
            Model Updated: ${{ steps.model_check.outputs.model_updated || 'N/A' }}

            Error log (last 50 lines):
            
            ${{ steps.get_log_tail.outputs.log_tail }}

 